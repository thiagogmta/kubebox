---
# Instalação de pacotes iniciais necessários ao ambiente
- hosts: all
  become: true
  tasks:
    - name: Atualizar o índice de pacotes apt
      apt:
        update_cache: yes

    - name: Instalar pacotes necessários para o repositório apt do Kubernetes
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gpg
        state: present
        update_cache: yes

    # Criação do diretório para keyrings, se necessário
    - name: Criar diretório /etc/apt/keyrings se não existir
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    # Baixar a chave GPG do Kubernetes
    - name: Baixar a chave GPG do Kubernetes
      get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key
        dest: /etc/apt/keyrings/kubernetes-apt-keyring.gpg.raw

    # Converter a chave GPG para o formato adequado
    - name: Converter a chave GPG para o formato adequado
      command: gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg /etc/apt/keyrings/kubernetes-apt-keyring.gpg.raw

    # Adicionar o repositório do Kubernetes
    - name: Adicionar o repositório do Kubernetes
      ansible.builtin.command: |
        echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.23/deb/ /" | tee /etc/apt/sources.list.d/kubernetes.list

    # Atualizar pacotes e instalar kubelet, kubeadm e kubectl
    - name: Atualizar o índice de pacotes apt novamente
      apt:
        update_cache: yes

    - name: Instalar kubelet, kubeadm e kubectl
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Pin kubelet, kubeadm e kubectl para evitar atualizações automáticas
      command: sudo apt-mark hold kubelet kubeadm kubectl

    # Configuração do ContainerD
    - name: Configura containerd
      blockinfile:
        create: true
        path: /etc/modules-load.d/containerd.conf
        block: |
          overlay
          br_netfilter
  
    - name: Enable kernel modules
      shell: |
        modprobe overlay
        modprobe br_netfilter
  
    - name: Configure IP forwarding and iptables
      blockinfile:
        create: true
        path: /etc/sysctl.conf
        block: |
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
  
    - name: Persist changes
      command: sysctl -p

    - name: Get IP eth1 addr
      shell: ifconfig eth1 | grep 'inet' | cut -d{{':'}} -f2 | awk '{ print $2 }'
      register: output

    - name: Configure Kubelet
      lineinfile:
        path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
        line: Environment="KUBELET_EXTRA_ARGS=--node-ip={{ output.stdout }}"

    - name: Copy the join command to server location
      copy: 
        src: join-command 
        dest: /tmp/join-command.sh 
        mode: '0777'

    - name: Join the node to cluster
      command: sh /tmp/join-command.sh
